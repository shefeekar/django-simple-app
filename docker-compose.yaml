version: '3.8'

services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_NAME:-world}
      MYSQL_USER: ${DB_USER:-django}
      MYSQL_PASSWORD: ${DB_PASSWORD:-django123}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./world.sql:/docker-entrypoint-initdb.d/world.sql
    networks:
      - django-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5

  web:
    build: .
    environment:
      DB_NAME: ${DB_NAME:-world}
      DB_USER: ${DB_USER:-django}
      DB_PASSWORD: ${DB_PASSWORD:-django123}
      DB_HOST: db
      DB_PORT: 3306
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-True}
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT:-587}
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - django-network
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py rebuild_index --noinput &&
             python manage.py runserver 0.0.0.0:8001"

volumes:
  mysql_data:

networks:
  django-network:
    driver: bridge
